{"version":3,"sources":["hooks.ts","components/USD.tsx","components/EUR.tsx","components/PLN.tsx","store/CurrencySlice.ts","App.tsx","store/index.ts","index.tsx"],"names":["useAppSelector","useSelector","USD","usd","state","currency","useState","value","setValue","className","toFixed","type","placeholder","min","onChange","event","target","EUR","eur","PLN","pln","fetchUsd","createAsyncThunk","a","fetch","response","ok","Error","json","data","result","fetchEur","fetchPln","CurrencySlice","createSlice","name","initialState","isLoading","reducers","extraReducers","build","addCase","pending","fulfilled","action","payload","App","dispatch","useDispatch","loading","useEffect","to","path","element","store","configureStore","reducer","CurrencyReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffea1379.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useState } from 'react';\nimport { useAppSelector } from '../hooks';\nimport './USD.scss';\n\nexport const USD: React.FC = () => {\n  const usd = useAppSelector(state => state.currency.usd);\n  const [value, setValue] = useState('');\n\n  return (\n    <div className=\"container usd-tab\">\n      <div className=\"usd-tab__container\">\n        <h1>Result:</h1>\n        <h2 className=\"usd-tab__info\">\n          {`${value} UAH to USD = ${(usd * +value).toFixed(2)}`}\n        </h2>\n      </div>\n      <input\n        type=\"number\"\n        className=\"usd-tab__input input is-primary\"\n        placeholder=\"Please,enter the sum \"\n        min={1}\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useAppSelector } from '../hooks';\nimport './EUR.scss';\n\nexport const EUR: React.FC = () => {\n  const eur = useAppSelector(state => state.currency.eur);\n  const [value, setValue] = useState('');\n\n  return (\n    <div className=\"container eur-tab\">\n      <div className=\"eur-tab__container\">\n        <h1>Result:</h1>\n        <h2 className=\"eur-tab__info\">\n          {`${value} UAH to EUR = ${(eur * +value).toFixed(2)}`}\n        </h2>\n      </div>\n      <input\n        type=\"number\"\n        className=\"eur-tab__input input is-primary\"\n        placeholder=\"Please,enter the sum\"\n        min={1}\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useAppSelector } from '../hooks';\nimport './PLN.scss';\n\nexport const PLN: React.FC = () => {\n  const pln = useAppSelector(state => state.currency.pln);\n  const [value, setValue] = useState('');\n\n  return (\n    <div className=\"container pln-tab\">\n      <div className=\"pln-tab__container\">\n        <h1>Result:</h1>\n        <h2 className=\"pln-tab__info\">\n          {`${value} UAH to PLN = ${(pln * +value).toFixed(2)}`}\n        </h2>\n      </div>\n      <input\n        type=\"number\"\n        className=\"pln-tab__input input is-primary\"\n        placeholder=\"Please,enter the sum\"\n        min={1}\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n      />\n    </div>\n  );\n};\n","/* eslint-disable no-param-reassign */\n\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\ntype CurrencyState = {\n  usd: number,\n  eur: number,\n  pln: number,\n  isLoading: boolean,\n};\n\nconst initialState: CurrencyState = {\n  usd: 0,\n  eur: 0,\n  pln: 0,\n  isLoading: false,\n};\n\nexport const fetchUsd = createAsyncThunk<number, undefined>(\n  'usd/fetchUsd',\n  async () => {\n    const response = await fetch('https://api.exchangerate.host/convert?from=UAH&to=USD');\n\n    if (!response.ok) {\n      throw new Error('Server Error');\n    }\n\n    const data = await response.json();\n\n    return data.result;\n  },\n);\n\nexport const fetchEur = createAsyncThunk<number, undefined>(\n  'eur/fetchEur',\n  async () => {\n    const response = await fetch('https://api.exchangerate.host/convert?from=UAH&to=EUR');\n\n    if (!response.ok) {\n      throw new Error('Server Error');\n    }\n\n    const data = await response.json();\n\n    return data.result;\n  },\n);\n\nexport const fetchPln = createAsyncThunk<number, undefined>(\n  'pln/fetchPln',\n  async () => {\n    const response = await fetch('https://api.exchangerate.host/convert?from=UAH&to=PLN');\n\n    if (!response.ok) {\n      throw new Error('Server Error');\n    }\n\n    const data = await response.json();\n\n    return data.result;\n  },\n);\n\nconst CurrencySlice = createSlice({\n  name: 'currency',\n  initialState,\n  reducers: {\n  },\n  extraReducers: (build) => {\n    build\n      .addCase(fetchUsd.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchUsd.fulfilled, (state, action) => {\n        state.usd = action.payload;\n        state.isLoading = false;\n      })\n      .addCase(fetchEur.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchEur.fulfilled, (state, action) => {\n        state.eur = action.payload;\n        state.isLoading = false;\n      })\n      .addCase(fetchPln.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchPln.fulfilled, (state, action) => {\n        state.pln = action.payload;\n        state.isLoading = false;\n      });\n  },\n});\n\nexport default CurrencySlice.reducer;\n","import React, { useEffect } from 'react';\nimport './App.scss';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { Routes, Route, NavLink } from 'react-router-dom';\n// import { getLoadDataSelector } from './store/selectors';\n// import { setLoadData } from './store/actions';\n// import { getTodos } from './api/api';\nimport { USD } from './components/USD';\nimport { EUR } from './components/EUR';\nimport { PLN } from './components/PLN';\nimport { useAppDispatch, useAppSelector } from './hooks';\n// eslint-disable-next-line import/named\nimport { fetchEur, fetchPln, fetchUsd } from './store/CurrencySlice';\n// eslint-disable-next-line import/extensions,import/no-unresolved\n\n// export const App: React.FC = () => {\n//   const dispatch = useDispatch();\n//   const loadData = useSelector(getLoadDataSelector);\n//\n//   const loadInfo = async () => {\n//     const todosFromServer = await getTodos();\n//\n//     dispatch(setLoadData(todosFromServer));\n//     // eslint-disable-next-line no-console\n//     console.log(todosFromServer);\n//   };\n//\n//   useEffect(() => {\n//     loadInfo();\n//   }, []);\n//\n//   // eslint-disable-next-line no-console\n//   console.log(loadData);\n//\n//   return (\n//     <div className=\"App\">\n//       <p>{loadData.symbols}</p>\n//     </div>\n//   );\n// };\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const loading = useAppSelector(state => state.currency.isLoading);\n\n  useEffect(() => {\n    dispatch(fetchUsd());\n    dispatch(fetchEur());\n    dispatch(fetchPln());\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <h1>Loading...</h1>\n      ) : (\n        <header>\n          <div className=\"tabs is-flex is-flex-direction-column is-justify-content-center\">\n            <h1 className=\"title has-text-centered\">Currency converter</h1>\n            <NavLink to=\"/USD\">UAH to USD</NavLink>\n            <NavLink to=\"/EUR\">UAH to EUR</NavLink>\n            <NavLink className=\"App__tab\" to=\"/PLN\">UAH to PLN</NavLink>\n          </div>\n        </header>\n      )}\n      <Routes>\n        <Route path=\"/USD\" element={<USD />} />\n        <Route path=\"/EUR\" element={<EUR />} />\n        <Route path=\"/PLN\" element={<PLN />} />\n      </Routes>\n    </div>\n  );\n};\n","// import { configureStore, createReducer } from '@reduxjs/toolkit';\n// // eslint-disable-next-line import/extensions,import/no-unresolved\n// import { State } from '../react-app-env';\n// import { setLoadData } from './actions';\n//\n// export type AppDispatch = typeof store.dispatch;\n// export const initialState: State = {\n//   loadData: {\n//     date: '',\n//     base: '',\n//     symbols: '',\n//     amount: 0,\n//   },\n// };\n// const reducer = createReducer(initialState, (builder) => {\n//   builder\n//     .addCase(setLoadData, (state, action) => {\n//       // eslint-disable-next-line no-param-reassign\n//       state.loadData = action.payload;\n//     });\n// });\n//\n// export const store = configureStore({ reducer });\nimport { configureStore } from '@reduxjs/toolkit';\nimport CurrencyReducer from './CurrencySlice';\n\nconst store = configureStore({\n  reducer: {\n    currency: CurrencyReducer,\n  },\n});\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'bulma/css/bulma.min.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\nimport store from './store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    ,\n  </BrowserRouter>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}